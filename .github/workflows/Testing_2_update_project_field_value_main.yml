name: Update GitHub Project Field

on:
  issues:
    types: [opened, edited, labeled]

permissions:
  contents: write
  issues: write
  projects: write  # Ensure project update permission

jobs:
  update-project-field:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Issue ID
        id: get_issue_id
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo "Fetching Issue ID for issue #${{ github.event.issue.number }}..."
          
          ISSUE_ID=$(gh api graphql -f query='
          {
            repository(owner: "${{ github.repository_owner }}", name: "${{ github.event.repository.name }}") {
              issue(number: ${{ github.event.issue.number }}) {
                id
              }
            }
          }' --jq '.data.repository.issue.id')

          echo "Issue ID: $ISSUE_ID"
          echo "ISSUE_ID=$ISSUE_ID" >> "$GITHUB_ENV"

      - name: Update Project Field
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          PROJECT_ID="PVT_kwHOBffn_c4Ay8TW"  # ✅ Correct Project ID
          FIELD_ID="PVTF_lAHOBffn_c4Ay8TWzgo0NbQ"  # ✅ Correct Field ID
          FIELD_VALUE="\"10\""  # ✅ Value to set

          echo "Updating project field for Issue ID: $ISSUE_ID..."

          gh api graphql -H "Authorization: Bearer $GH_TOKEN" -f query='
          mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: String!) {
            updateProjectV2ItemFieldValue(
              input: {
                projectId: $projectId
                itemId: $itemId
                fieldId: $fieldId
                value: { text: $value }
              }
            ) {
              projectV2Item {
                id
              }
            }
          }' -F projectId="$PROJECT_ID" -F itemId="$ISSUE_ID" -F fieldId="$FIELD_ID" -F value="$FIELD_VALUE"

          echo "✅ Project field updated successfully!"
